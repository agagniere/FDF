name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
    - name: Download source files
      uses: actions/checkout@v3.0.0
      with:
        submodules: recursive
    - name: Install utilities
      run: |
        test $(uname -s) != "Darwin" && sudo apt-get update
        $(test $(uname -s) = "Darwin" && echo brew install || echo sudo apt-get -yq install) ghostscript help2man gnuplot
    - name: Setup Python
      uses: actions/setup-python@v3.0.0
    - name: Install conan
      run : python3 -m pip install conan
    - name: Prepare dependencies
      run: |
        pushd vendor
        ( cd  Libft ; conan install . -o "libft:shared=False" ; conan build . ; conan export-pkg .)
        ( cd  MinilibX ; conan export .)
        pushd HLM
        export CONAN_SYSREQUIRES_MODE=enabled
        conan install . --build missing -o "libft:shared=False" -o "minilibx:shared=False"
        conan build .
        conan export-pkg .
        popd
        popd
    - name: Compile
      run: |
        conan install . --build missing -o "libft:shared=False" -o "minilibx:shared=False"
        make build
    - name: Generate documentation
      run: |
        ./fdf.exe --version
        ./fdf.exe --help
        make pdf
    - name: Run
      run: |
        ./fdf.exe --output=doc/42.bmp maps/42.fdf
        ./fdf.exe --output=doc/mars.bmp maps/mars.fdf
        ./fdf.exe --output=doc/pylone.bmp maps/pylone.fdf
    - name: Test
      run: ( cd test ; bash end_to_end_test.sh )
    - name: Benchmark
      run: bash benchmark.sh maps/mars.fdf tmp doc/benchmark.png
    - name: Upload output
      uses: actions/upload-artifact@v3.0.0
      with:
        name: FDF_doc
        path: doc
