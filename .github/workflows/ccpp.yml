name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - name: Download source files
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        test $(uname -s) = "Darwin" || sudo apt-get -yq install libx11-dev libxext-dev libxpm-dev ghostscript help2man gnuplot
        test $(uname -s) != "Darwin" || brew install ghostscript help2man gnuplot
    - name: Compile
      run: make build
    - name: Generate documentation
      run: make pdf
    - name: Run
      run: |
        ./fdf.exe --output=doc/42.bmp maps/42.fdf
        ./fdf.exe --output=doc/mars.bmp maps/mars.fdf
        ./fdf.exe --output=doc/pylone.bmp maps/pylone.fdf
    - name: Benchmark
      run: bash benchmark.sh maps/mars.fdf tmp doc/benchmark.png
    - name: Upload output
      uses: actions/upload-artifact@v1.0.0
      with:
        name: FDF_doc
        path: doc
    - name: Clean
      run: |
        make fclean
        git clean -xdf
